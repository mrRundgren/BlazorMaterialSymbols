@using BlazorMaterialSymbols;

<HeadContent>
    <link rel="preload" href="_content/BlazorMaterialSymbols/gNMVW2J8Roq16WD5tFNRaeLQk6-SHQ_R00k4aWE.woff2" as="font" type="font/woff2" crossorigin="anonymous">
    <link rel="preload" href="_content/BlazorMaterialSymbols/kJEhBvYX7BgnkSrUwT8OhrdQw4oELdPIeeII9v6oFsI.woff2" as="font" type="font/woff2" crossorigin="anonymous">
    <link rel="preload" href="_content/BlazorMaterialSymbols/sykg-zNym6YjUruM-QrEh7-nyTnjDwKNJ_190Fjzag.woff2" as="font" type="font/woff2" crossorigin="anonymous">
    <link rel="preload stylesheet" href="_content/BlazorMaterialSymbols/Icon.css" type="text/css" as="style" crossorigin="anonymous">
    <style>
        :root {
            @($"--material-symbols-family:'{Type.Value()}';")
            @($"--material-symbols-size:{Size.Value()}px;")
            @($"--material-symbols-fill:{Fill.Value()};")
            @($"--material-symbols-wght:{Weight.Value()};")
            @($"--material-symbols-grad:{Grade.Value()};")
            @($"--material-symbols-opsz:{Size.Value()};")
        }
    </style>
</HeadContent>

@code {
    [Parameter]
    public IconType Type { get; set; } = IconType.Outlined;

    [Parameter]
    public EventCallback<IconType> TypeChanged { get; set; }

    [Parameter]
    public IconFill Fill { get; set; } = IconFill.None;

    [Parameter]
    public EventCallback<IconFill> FillChanged { get; set; }

    [Parameter]
    public IconSize Size { get; set; } = IconSize.Normal;

    [Parameter]
    public EventCallback<IconSize> SizeChanged { get; set; }

    [Parameter]
    public IconWeight Weight { get; set; } = IconWeight.Weight400;

    [Parameter]
    public EventCallback<IconWeight> WeightChanged { get; set; }

    [Parameter]
    public IconGrade Grade { get; set; } = IconGrade.Medium;

    [Parameter]
    public EventCallback<IconGrade> GradeChanged { get; set; }
}